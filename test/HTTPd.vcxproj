<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug Unicode|Win32">
      <Configuration>Debug Unicode</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug Unicode|x64">
      <Configuration>Debug Unicode</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release Unicode|Win32">
      <Configuration>Release Unicode</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release Unicode|x64">
      <Configuration>Release Unicode</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{2DBF271C-51D2-9A26-A726-ADF085F3B082}</ProjectGuid>
    <RootNamespace>HTTPd</RootNamespace>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">false</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">true</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">false</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">true</LinkIncremental>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">false</GenerateManifest>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</GenerateManifest>
    <RunCodeAnalysis Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">false</RunCodeAnalysis>
    <RunCodeAnalysis Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">false</RunCodeAnalysis>
    <RunCodeAnalysis Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</RunCodeAnalysis>
    <RunCodeAnalysis Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>true</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>true</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>true</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>true</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>false</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>false</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>false</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">
    <ClangTidyChecks>*,-clang-diagnostic-unused-function,-altera-*,-android-*,-boost-*,-android-cloexec-accept,-android-cloexec-fopen,-android-cloexec-open,-android-cloexec-epoll-create,-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-easily-swappable-parameters,-bugprone-exception-escape,-bugprone-inc-dec-in-conditions,-bugprone-macro-parentheses,-bugprone-narrowing-conversions,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-cert-dcl16-c,-cert-dcl37-c,-cert-dcl50-cpp,-cert-dcl51-cpp,-cert-err33-c,-cert-err34-c,-cert-err58-cpp,-cert-msc30-c,-cert-msc50-cpp,-clang-analyzer-optin*,-clang-analyzer-osx*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-clang-analyzer-security.insecureAPI.rand,-clang-analyzer-security.insecureAPI.strcpy,-clang-analyzer-valist.Uninitialized,-clang-diagnostic-error,-clang-diagnostic-ignored-optimization-argument,-clang-diagnostic-microsoft-cast,-clang-diagnostic-pragma-pack,-clang-diagnostic-unknown-pragmas,-clang-diagnostic-unknown-warning-option,-clang-diagnostic-unused-function,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-const-or-ref-data-members,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-goto,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-explicit-virtual-functions,-cppcoreguidelines-init-variables,-cppcoreguidelines-macro-to-enum,-cppcoreguidelines-macro-usage,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-prefer-member-initializer,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-member-init,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-use-default-member-init,-fuchsia-default-arguments-calls,-fuchsia-default-arguments-declarations,-fuchsia-multiple-inheritance,-fuchsia-statically-constructed-objects,-fuchsia-overloaded-operator,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-global-names-in-headers,-google-objc-*,-google-readability-braces-around-statements,-google-readability-casting,-google-readability-todo,-google-runtime-int,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-avoid-goto,-hicpp-braces-around-statements,-hicpp-deprecated-headers,-hicpp-explicit-conversions,-hicpp-member-init,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-malloc,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-use-auto,-hicpp-use-equals-default,-hicpp-use-equals-delete,-hicpp-use-noexcept,-hicpp-use-nullptr,-hicpp-use-override,-hicpp-vararg,-llvm-else-after-return,-llvm-header-guard,-llvm-include-order,-llvmlibc-callee-namespace,-llvmlibc-inline-function-decl,-llvmlibc-implementation-in-namespace,-llvmlibc-restrict-system-libc-headers,-misc-const-correctness,-misc-include-cleaner,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-misc-redundant-expression,-misc-use-internal-linkage,-misc-unused-parameters,-misc-use-anonymous-namespace,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-deprecated-ios-base-aliases,-modernize-loop-convert,-modernize-macro-to-enum,-modernize-redundant-void-arg,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-designated-initializers,-modernize-use-equals-default,-modernize-use-equals-delete,-modernize-use-nodiscard,-modernize-use-nullptr,-modernize-use-trailing-return-type,-modernize-use-override,-modernize-use-ranges,-modernize-use-using,-objc-*,-performance-avoid-endl,-performance-enum-size,-performance-no-int-to-ptr,-readability-braces-around-statements,-readability-function-cognitive-complexity,-readability-const-return-type,-readability-convert-member-functions-to-static,-readability-else-after-return,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-inconsistent-declaration-parameter-name,-readability-isolate-declaration,-readability-magic-numbers,-readability-make-member-function-const,-readability-misplaced-array-index,-readability-named-parameter,-readability-redundant-access-specifiers,-readability-simplify-boolean-expr,-readability-static-accessed-through-instance,-readability-use-std-min-max,-readability-avoid-nested-conditional-operator,-readability-redundant-casting,-readability-math-missing-parentheses</ClangTidyChecks>
    <EnableClangTidyCodeAnalysis>false</EnableClangTidyCodeAnalysis>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>false</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <EnablePREfast>false</EnablePREfast>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <SDLCheck>true</SDLCheck>
      <StringPooling>true</StringPooling>
      <ControlFlowGuard>
      </ControlFlowGuard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <CreateHotpatchableImage>
      </CreateHotpatchableImage>
      <SupportJustMyCode>true</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <StringPooling>true</StringPooling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <FloatingPointModel>Fast</FloatingPointModel>
      <SupportJustMyCode>false</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <OmitFramePointers>true</OmitFramePointers>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|Win32'">
    <ClCompile>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <StringPooling>true</StringPooling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <FloatingPointModel>Fast</FloatingPointModel>
      <SupportJustMyCode>false</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <OmitFramePointers>true</OmitFramePointers>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>false</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <EnablePREfast>false</EnablePREfast>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <SDLCheck>true</SDLCheck>
      <StringPooling>true</StringPooling>
      <ControlFlowGuard>
      </ControlFlowGuard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <CreateHotpatchableImage>
      </CreateHotpatchableImage>
      <SupportJustMyCode>true</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <TargetEnvironment>X64</TargetEnvironment>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <EnablePREfast>false</EnablePREfast>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <SDLCheck>true</SDLCheck>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <ControlFlowGuard>
      </ControlFlowGuard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <CreateHotpatchableImage>
      </CreateHotpatchableImage>
      <SupportJustMyCode>true</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <TargetMachine>MachineX64</TargetMachine>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <TargetEnvironment>X64</TargetEnvironment>
    </Midl>
    <ClCompile>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <MinimalRebuild>false</MinimalRebuild>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <StringPooling>true</StringPooling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <FloatingPointModel>Fast</FloatingPointModel>
      <SupportJustMyCode>false</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <OmitFramePointers>true</OmitFramePointers>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <TargetMachine>MachineX64</TargetMachine>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release Unicode|x64'">
    <Midl>
      <TargetEnvironment>X64</TargetEnvironment>
    </Midl>
    <ClCompile>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <MinimalRebuild>false</MinimalRebuild>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <StringPooling>true</StringPooling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <FloatingPointModel>Fast</FloatingPointModel>
      <SupportJustMyCode>false</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <OmitFramePointers>true</OmitFramePointers>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <TargetMachine>MachineX64</TargetMachine>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug Unicode|x64'">
    <Midl>
      <TargetEnvironment>X64</TargetEnvironment>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>..\lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <ExceptionHandling>false</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <EnablePREfast>false</EnablePREfast>
      <AdditionalOptions>/FS /Zc:__cplusplus %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <SDLCheck>true</SDLCheck>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <ControlFlowGuard>
      </ControlFlowGuard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <CreateHotpatchableImage>
      </CreateHotpatchableImage>
      <SupportJustMyCode>true</SupportJustMyCode>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <TargetMachine>MachineX64</TargetMachine>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="HTTPd.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\lib\Blister.vcxproj">
      <Project>{8d2b86fe-7fc9-49dc-9b46-ab7bfa937a38}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>